import cloudinary from 'cloudinary';
import fetch from 'node-fetch';
import { JSDOM } from 'jsdom';

const getFilenameFromUrl = url =>
  url.substring(url.lastIndexOf('/') + 1, url.lastIndexOf('.'));

class Photos {
  constructor() {
    this.uploads = {};
  }

  static waitForAllUploads(id, err, image) {
    this.uploads[id] = image;

    const ids = Object.keys(this.uploads);
    if (ids.length == 6) {
      console.log();
      console.log(
        '**  uploaded all files (' + ids.join(',') + ') to cloudinary'
      );
    }
  }

  index(req, res) {
    fetch('https://www.instagram.com/tara/').then(response => {
      response.text().then(text => {
        const window = new JSDOM(text, {
          runScripts: 'outside-only'
        }).window;

        // find script element containing user data
        window.document.querySelectorAll('script').forEach(script => {
          if (
            !script.src &&
            script.text
              .slice(0, 49)
              .toLowerCase()
              .indexOf('shareddata') > -1
          ) {
            // add `_sharedData` to window object
            window.eval(script.text);

            const edges =
              window._sharedData.entry_data.ProfilePage[0].graphql.user
                .edge_owner_to_timeline_media.edges;
            // filenames
            edges.map(edge => {
              // 640x640
              // image sizes: https://stackoverflow.com/questions/14016142/instagram-api-custom-image-width/32070650#32070650
              const filename = getFilenameFromUrl(edge.node.thumbnail_src);
              const imageUrl = `http://res.cloudinary.com/hlvbevjxx/${filename}`;
              const waitForAllUploads = this.constructor.waitForAllUploads;

              // TODO: add subdirectory of image size
              cloudinary.v2.uploader.upload(
                edge.node.thumbnail_src,
                { public_id: getFilenameFromUrl(edge.node.thumbnail_src) },
                (err, image) => {
                  console.log();
                  console.log('** File Upload');
                  if (err) {
                    console.warn(err);
                  }
                  console.log(
                    "* public_id for the uploaded image is generated by Cloudinary's service."
                  );
                  console.log('* ' + image.public_id);
                  console.log('* ' + image.url);
                  waitForAllUploads(
                    getFilenameFromUrl(edge.node.thumbnail_src),
                    err,
                    image
                  );
                }
              );

              return imageUrl;
            });
          }

          // res
          //   .status(200)
          //   .type('json')
          //   .send(srcs);
        });
      });
    });
  }
}

Photos.uploads = undefined;

export default Photos;
